# Sql\u6253\u5370  \u662F\u5426\u6253\u5370SQL\u4E0D\u5728\u8FD9\u91CC\u914D\u7F6E\uFF0C\u5728 spring.jpa.show-sql = true \u4E2D\u914D\u7F6E
# \u662F\u5426\u7F8E\u5316sql
#spring.jpa.properties.hibernate.format_sql = false
# \u662F\u5426\u5F00\u542F\u52A0\u5165\u6CE8\u91CA\u7684\u529F\u80FD
#spring.jpa.properties.hibernate.use_sql_comments = true

# \u6279\u91CF\u914D\u7F6E
spring.jpa.properties.hibernate.jdbc.fetch_size=30
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# \u6253\u5F00hibernate\u7EDF\u8BA1\u4FE1\u606F
#spring.jpa.properties.hibernate.generate_statistics=true

#**********     \u6CE8\u610F\u4E0B\u9762\u7684\u53C2\u6570\u90FD\u6CA1\u6709 properties \u8FD9\u4E2A\u524D\u7F00     **********
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.properties.hibernate.ejb.interceptor=org.zen.frame.vendor.hibernate.interceptor.HibernateInterceptor


#JPA
spring.jpa.open-in-view=true
#spring.jpa.show-sql = true

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
# \u6BCF15\u5206\u949F\u68C0\u67E5\u4E00\u6B21
spring.datasource.timeBetweenEvictionRunsMillis = 900000
